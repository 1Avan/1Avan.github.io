(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{711:function(t,a,s){t.exports=s.p+"assets/img/image-20230705100653502.a745d906.png"},739:function(t,a,s){"use strict";s.r(a);var v=s(5),e=Object(v.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),v("p",[t._v("这里是关于前后端分离开发过程常用的交流方式介绍")])]),t._v(" "),v("h2",{attrs:{id:"什么是api接口文档"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是api接口文档"}},[t._v("#")]),t._v(" 什么是api接口文档？")]),t._v(" "),v("p",[t._v("项目基于前后端分离, 而 接口文档 就是 统一定义前后端沟通开发的文档 。")]),t._v(" "),v("p",[t._v("接口文档 主要由"),v("code",[t._v("后端Java开发工程师")]),t._v("来写。")]),t._v(" "),v("p",[t._v("前端工程师：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("    把精力放在html，css，javaScript，vue，ajax，Google V8引擎，javascript多线程，模块化，面向切面编程，设计模式，浏览器兼容性，性能优化等等。\n")])])]),v("p",[t._v("后端工程师(Java)：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("    把精力放在设计模式，spring+springmvc，linux，mysql事务隔离与锁机制，mongodb，http/tcp，多线程，分布式架构，弹性计算架构，微服务架构，java性能优化，以及相关的项目管理等等。\n")])])]),v("h2",{attrs:{id:"接口文档的表现形式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口文档的表现形式"}},[t._v("#")]),t._v(" 接口文档的表现形式")]),t._v(" "),v("p",[v("img",{attrs:{src:s(711),alt:"image-20230705100653502"}})]),t._v(" "),v("p",[t._v("现在前后端交互一般都是使用接口文档，使用word等工具开发效率慢且不容易上手")]),t._v(" "),v("h2",{attrs:{id:"eolink-apikit-接口文档"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#eolink-apikit-接口文档"}},[t._v("#")]),t._v(" Eolink Apikit 接口文档")]),t._v(" "),v("p",[t._v("官方网址："),v("a",{attrs:{href:"https://www.eolink.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eolink - 一体化API在线管理平台_API接口管理_接口自动化测试"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("Eolink 是一款定位"),v("strong",[t._v("专业级的一站式API协作平台")]),t._v("，也是国内最早投身API工具研发的平台之一，团队早在2016年就发布了"),v("strong",[t._v("国内首个")]),t._v("集Swagger+Postman+Mock+Jmeter单点工具于一身的开源产品Eoapi，能够快速解决API文档管理、快速测试、Mock、API自动化测试等问题。并于2017年正式发布了"),v("strong",[t._v("全球首个在线API全生命周期管理平台")]),t._v("，帮助全球开发者更高效的开发、测试和运维API。Eolink由此迭代演化而来。")]),t._v(" "),v("h2",{attrs:{id:"前端vue项目开发注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端vue项目开发注意事项"}},[t._v("#")]),t._v(" 前端vue项目开发注意事项")]),t._v(" "),v("p",[v("code",[t._v("开始编码之前先通过git status查看当前工作区是否干净")])]),t._v(" "),v("p",[t._v("git status命令用于显示工作目录和暂存区的状态。使用此命令能看到那些修改被暂存到了, 哪些没有, 哪些文件没有被Git tracked到。 git status不显示已经commit到项目历史中去的信息。看项目历史的信息要使用git log.")]),t._v(" "),v("p",[t._v("总结：git status 命令用于查看在你上次提交之后是否有对文件进行再次修改。")]),t._v(" "),v("p",[t._v("当执行 git status 的时候，返回结果大致可分为3个部分：")]),t._v(" "),v("p",[t._v("拟提交的变更：这是已经放入暂存区，准备使用 git commit 命令提交的变更\n未暂存的变更：这是工作目录和暂存区快照之间存在差异的文件列表\n未跟踪的文件：这类文件对于 Git 系统来说是未知的，也是可以被忽略的")]),t._v(" "),v("p",[v("code",[t._v("开发新功能的时候建立一个新的子分支（git checkout -b 子分支名称）写好功能后将子分支的功能合并到总分支上")])]),t._v(" "),v("p",[t._v("添加后"),v("code",[t._v("git branch")]),t._v("查看当前所有分支")])])}),[],!1,null,null,null);a.default=e.exports}}]);